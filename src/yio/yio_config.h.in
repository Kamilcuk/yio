/**
 * @file yio_config.h.in
 * @date 5 kwi 2020
 * @author Kamil Cukrowski
 * @copyright
 * SPDX-License-Identifier: GPL-3.0-only
 */
#pragma once
#include "yio_config_gen.h"

/**
 * @addtogroup config
 * @{
 */

/**
 * @def _yIO_HAS_INT128
 * Set by cmake if the compiler supports __int128 type
 * Like gcc: https://gcc.gnu.org/onlinedocs/gcc/_005f_005fint128.html
 */
#cmakedefine _yIO_HAS_INT128

/**
 * @def _yIO_HAS_UNISTD_H
 * Set by cmake if the compiler is posix.
 */
#cmakedefine _yIO_HAS_UNISTD_H

/**
 * @def _yIO_HAS_FLOAT_H
 * Do we have float.h include file? 
 */
#cmakedefine _yIO_HAS_FLOAT_H

/**
 * @def _yIO_HAS_asprintf
 * Do we have asprintf?
 */
#cmakedefine _yIO_HAS_asprintf

/**
 * @def YIO_FLOATS_PREFER_CUSTOM
 * Prefer custom stupid method of printing floats.
 * There are three methods that this library can print floats with:
 * 1. There are strfrom* function. They are the preferred way
 *    if they are available (ex. @see _yIO_HAS_strfromf).
 * 2. We can use `snprintf` (or `asprintf if available, @see _yIO_HAS_asprintf).
 * 3. And there is the custom method.
 * Using strfrom* is preferred. If not available, then using printf is chosen.
 * When `YIO_PRINT_FLOAT_PREFER_CUSTOM` is set, then custom method is chosen.
 * Note that the algorithm "works", but is insanely very very bad
 * by any possible measurement.
 */
#cmakedefine YIO_FLOATS_PREFER_CUSTOM

/**
 * @def YIO_IEC_60559_BFP_PREFER_CUSTOM
 * @see YIO_FLOATS_PREFER_CUSTOM
 * Like YIO_IEC_60559_BFP_PREFER_CUSTOM but for _FloatN types.
 */
#cmakedefine YIO_IEC_60559_BFP_PREFER_CUSTOM

/**
 * @def YIO_IEC_60559_DFP_PREFER_CUSTOM
 * @see YIO_FLOATS_PREFER_CUSTOM
 * Like YIO_IEC_60559_BFP_PREFER_CUSTOM but for _DecimalN types.
 */
#cmakedefine YIO_IEC_60559_DFP_PREFER_CUSTOM

/**
 * @def YIO_USE_INPUT_FD
 * If set, yprint will use file descriptor 1 instead of FILE *stdout
 * Only set, if system has unistd.h
 */
#cmakedefine YIO_USE_INPUT_FD

/**
 * @def YIO_USE_OUTPUT_FD
 * @brief If set, yscan will use file descriptor 0 instead of FILE *stdin
 * Only set, if system has unistd.h
 */
#cmakedefine YIO_USE_OUTPUT_FD

// check
#ifndef _yIO_HAS_UNISTD_H
#ifdef YIO_USE_OUTPUT_FD
#error "You can't output to fd without unistd.h"
#endif
#ifdef YIO_USE_INPUT_FD
#error "You can't read from fd without unistd.h"
#endif
#endif

/**
 * @}
 */


